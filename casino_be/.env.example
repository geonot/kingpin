# ==============================================================================
# KINGPIN CASINO PRODUCTION ENVIRONMENT CONFIGURATION
# ==============================================================================
# 
# This file contains ALL required environment variables for production deployment.
# Copy this file to .env and fill in your production values.
# 
# ⚠️  SECURITY WARNING: Never commit .env files to version control!
# ⚠️  All variables marked as REQUIRED must be set for production startup.
#
# ==============================================================================

# ------------------------------------------------------------------------------
# ENVIRONMENT CONFIGURATION
# ------------------------------------------------------------------------------
FLASK_ENV=production
FLASK_DEBUG=False

# ------------------------------------------------------------------------------
# DATABASE CONFIGURATION (REQUIRED)
# ------------------------------------------------------------------------------
# Option 1: Full DATABASE_URL (recommended for production)
DATABASE_URL=postgresql://username:password@host:port/database_name

# Option 2: Individual database components (if DATABASE_URL not set)
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=kingpin_casino
# DB_USER=kingpin_user
# DB_PASSWORD=your_secure_database_password

# ------------------------------------------------------------------------------
# JWT SECURITY CONFIGURATION (REQUIRED)
# ------------------------------------------------------------------------------
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(64))"
JWT_SECRET_KEY=your_64_character_jwt_secret_key_here_generate_with_secrets_module

# JWT token expiration (in seconds)
JWT_ACCESS_TOKEN_EXPIRES=3600
JWT_REFRESH_TOKEN_EXPIRES=604800

# JWT cookie security (MUST be True in production)
JWT_COOKIE_SECURE=True

# ------------------------------------------------------------------------------
# ADMIN CONFIGURATION (REQUIRED)
# ------------------------------------------------------------------------------
# Create admin user credentials (use strong passwords!)
ADMIN_USERNAME=admin
ADMIN_PASSWORD=your_very_strong_admin_password_here
ADMIN_EMAIL=admin@yourdomain.com

# ------------------------------------------------------------------------------
# ENCRYPTION CONFIGURATION (REQUIRED)
# ------------------------------------------------------------------------------
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
ENCRYPTION_SECRET=your_32_character_encryption_secret_for_wallet_keys

# ------------------------------------------------------------------------------
# SERVICE AUTHENTICATION (REQUIRED)
# ------------------------------------------------------------------------------
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SERVICE_API_TOKEN=your_service_api_token_for_internal_services

# ------------------------------------------------------------------------------
# RATE LIMITING CONFIGURATION (REQUIRED FOR PRODUCTION)
# ------------------------------------------------------------------------------
# Redis URL for rate limiting (REQUIRED for multi-process production)
RATELIMIT_STORAGE_URI=redis://localhost:6379/0

# Redis connection with auth (if Redis has password)
# RATELIMIT_STORAGE_URI=redis://:password@localhost:6379/0

# Redis Cluster or Sentinel setup
# RATELIMIT_STORAGE_URI=redis+sentinel://sentinel-host:26379/mymaster/0

# ------------------------------------------------------------------------------
# CORS CONFIGURATION (REQUIRED FOR FRONTEND)
# ------------------------------------------------------------------------------
# Comma-separated list of allowed frontend origins
CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# For staging environment, you might include:
# CORS_ORIGINS=https://yourdomain.com,https://staging.yourdomain.com

# ------------------------------------------------------------------------------
# FEATURE FLAGS
# ------------------------------------------------------------------------------
# Enable/disable Crystal Garden feature
CRYSTAL_GARDEN_ENABLED=True

# ------------------------------------------------------------------------------
# BITCOIN/BLOCKCHAIN CONFIGURATION (if applicable)
# ------------------------------------------------------------------------------
# Add Bitcoin node or service API configurations here
# BITCOIN_RPC_URL=
# BITCOIN_RPC_USER=
# BITCOIN_RPC_PASSWORD=

# ------------------------------------------------------------------------------
# SSL/TLS CONFIGURATION
# ------------------------------------------------------------------------------
# SSL certificate paths (if serving HTTPS directly from Flask)
# SSL_CERT_PATH=/path/to/ssl/cert.pem
# SSL_KEY_PATH=/path/to/ssl/private.key

# ------------------------------------------------------------------------------
# LOGGING CONFIGURATION
# ------------------------------------------------------------------------------
# Log level for production
LOG_LEVEL=INFO

# External logging service (optional)
# SENTRY_DSN=https://your-sentry-dsn-here

# ------------------------------------------------------------------------------
# PERFORMANCE CONFIGURATION
# ------------------------------------------------------------------------------
# Number of worker processes (for gunicorn/uwsgi)
WEB_CONCURRENCY=4

# Max requests per worker (helps prevent memory leaks)
MAX_REQUESTS=1000
MAX_REQUESTS_JITTER=100

# ------------------------------------------------------------------------------
# SECURITY HEADERS (optional overrides)
# ------------------------------------------------------------------------------
# Content Security Policy (if you need to customize)
# CONTENT_SECURITY_POLICY=default-src 'self'; script-src 'self'; style-src 'self'

# ------------------------------------------------------------------------------
# MONITORING AND HEALTH CHECKS
# ------------------------------------------------------------------------------
# Application monitoring (optional)
# HEALTH_CHECK_TOKEN=your_health_check_token

# ------------------------------------------------------------------------------
# BACKUP CONFIGURATION (optional)
# ------------------------------------------------------------------------------
# Database backup settings
# BACKUP_SCHEDULE=0 2 * * *
# BACKUP_RETENTION_DAYS=30

# ==============================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# ==============================================================================
#
# Before deploying to production, ensure:
#
# ✅ All REQUIRED variables above are set with secure values
# ✅ All secrets are generated using cryptographically secure methods
# ✅ Database is properly configured and accessible
# ✅ Redis is running and accessible for rate limiting
# ✅ SSL/TLS certificates are valid and properly configured
# ✅ CORS origins match your frontend domain(s)
# ✅ Admin user will be created using: flask create-admin
# ✅ Database migrations are up to date: flask db upgrade
# ✅ Rate limiting is tested and working
# ✅ Monitoring and logging are configured
# ✅ Regular backups are scheduled
# ✅ Security headers are properly configured
#
# ==============================================================================
